## DB Properties
database.driverClassName=com.mysql.jdbc.Driver
database.connectionCount=10
#database.url=jdbc:mysql://118.128.155.103:3306/spa_analysis
#database.username=hellot007
#database.password=hellot0102
database.url=jdbc:mysql://192.168.219.104:3306/gojjang
database.username=root
database.password=root

## Hibernate Properties
#hibernate.dialect=org.hibernate.dialect.MySQLDialect
#hibernate.show_sql=true
#hibernate.hbm2ddl.auto=create
#hibernate.format_sql=true
#hibernate.use_sql_comments=true
#hibernate.id.new_generator_mappings=true
#hibernate.physical_naming_strategy=com.krobis.biz.model.naming.PhysicalNamingStrategyImpl

#spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=
#spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=no
#spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
#spring.jpa.properties.hibernate.id.new_generator_mappings = false
spring.jpa.properties.hibernate.format_sql=true


#<!--<prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>-->
#<prop key="hibernate.implicit_naming_strategy">org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl</prop>
#<prop key="hibernate.format_sql">${hibernate.format_sql:false}</prop>
#<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto:validate}</prop>
#<prop key="hibernate.show_sql">${hibernate.show_sql:false}</prop>
#<prop key="hibernate.use_sql_comments">${hibernate.use_sql_comments:false}</prop>
#<prop key="hibernate.id.new_generator_mappings">${hibernate.id.new_generator_mappings:true}</prop>
#<prop key="hibernate.enable_lazy_load_no_trans">${hibernate.enable_lazy_load_no_trans:true}</prop>
#<prop key="hibernate.max_fetch_depth">${hibernate.max_fetch_depth:1}</prop>
#<prop key="hibernate.default_batch_fetch_size">${hibernate.default_batch_fetch_size:16}</prop>

#spring.data.jpa.repositories.enabled: It enables JPA repositories. The default value is true.
#spring.jpa.database: It targets database to operate on. By default embedded database is auto-detected.
#spring.jpa.database-platform: It is used to provide the name of database to operate on. By default it is auto- detected.
#spring.jpa.generate-ddl: It is used to initialize schema on startup. By default the value is false.
#spring.jpa.hibernate.ddl-auto: It is DDL mode used for embedded database. Default value is create-drop.
#spring.jpa.hibernate.naming.implicit-strategy: It is Hibernate 5 implicit naming strategy fully qualified name.
#spring.jpa.hibernate.naming.physical-strategy: It is Hibernate 5 physical naming strategy fully qualified name.
#spring.jpa.hibernate.use-new-id-generator-mappings: It is used for Hibernate IdentifierGenerator for AUTO, TABLE and SEQUENCE.
#spring.jpa.open-in-view: The default value is true. It binds a JPA EntityManager to the thread for the entire processing of the request.
#spring.jpa.properties.*: It sets additional native properties to set on the JPA provider.
#spring.jpa.show-sql: It enables logging of SQL statements. Default value is false.

#hibernate.hbm2ddl.auto
#create : Session factory�� ����� ���� ��Ű���� ����� �ٽ� ����. Ŭ�����н��� import.sql �� �����ϸ� ã�Ƽ�, �ش� SQL�� �Բ� ������.
#create-drop : create�� ������ session factory�� ������ �� ��Ű�� ����.
#update : ���۽�, �����ΰ� ��Ű�� ���Ͽ� �ʿ��� �÷� �߰� ���� �۾� ����. �����ʹ� �������� ����.
#validate : Session factory ����� ��Ű���� �������� �˻���. ������ ������ ���� �߻�.
