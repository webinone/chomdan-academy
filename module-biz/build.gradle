bootRepackage {
    enabled = false
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    // https://mvnrepository.com/artifact/com.mysema.querydsl/querydsl-apt
    compile ("com.querydsl:querydsl-core:${rootProject.ext.querydslVersion}")
    compile ("com.querydsl:querydsl-apt:${rootProject.ext.querydslVersion}")
    compile ("com.querydsl:querydsl-jpa:${rootProject.ext.querydslVersion}")


    compile 'com.zaxxer:HikariCP:2.6.3'
    runtime('com.h2database:h2')


    compile("mysql:mysql-connector-java:5.1.34")
}

//
//def queryDslOutput = file("src/main/generated")
//
//sourceSets {
//    generated {
//        java {
//            srcDirs = ['src/main/generated']
//        }
//    }
//}
//
//
//clean {
//    delete queryDslOutput
//}
//
//task generateQueryDSL(type: JavaCompile, group: 'build') {
//    doFirst {
//        if (!queryDslOutput.exists()) {
//            logger.info("Creating `$queryDslOutput` directory")
//
//            if (!queryDslOutput.mkdirs()) {
//                throw new InvalidUserDataException("Unable to create `$queryDslOutput` directory")
//            }
//        }
//    }
//
//    source = sourceSets.generated.java
//    classpath = configurations.compile
//    options.compilerArgs = [
//            "-proc:only",
//            "-processor",
//            "com.querydsl.apt.jpa.JPAAnnotationProcessor"
//    ]
//    destinationDir = queryDslOutput
//}
//
//compileJava {
//    dependsOn generateQueryDSL
//    source sourceSets.generated.java.srcDirs.iterator().next()
//}
//
//compileGeneratedJava {
//    dependsOn generateQueryDSL
//    options.warnings = false
////    classpath += [sourceSets.generated.runtimeClasspath]
//}
//
//compileTestJava.dependsOn(generateQueryDSL)


sourceSets {
    main {
        java {
            srcDirs 'src/main/java', 'src/main/generated'
        }
    }
}

task generateQueryDSL(type: JavaCompile, group: 'build', description: 'Generates the QueryDSL query types') {
    file(new File(projectDir, "/src/main/generated")).deleteDir()
    file(new File(projectDir, "/src/main/generated")).mkdirs()
    source = sourceSets.main.java
    classpath = configurations.compile + configurations.compileOnly
    options.compilerArgs = [
            "-proc:only",
            "-processor", "com.querydsl.apt.jpa.JPAAnnotationProcessor"
    ]
    destinationDir = file('src/main/generated')
}

compileJava {
    dependsOn generateQueryDSL
}

clean.doLast {
    file(new File(projectDir, "/src/main/generated")).deleteDir()
}